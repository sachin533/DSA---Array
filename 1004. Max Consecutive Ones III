class Solution {
    public int longestOnes(int[] nums, int k) {
        int start = 0, count = 0; 

        for (int i = 0; i < nums.length; i++) {  
            if (nums[i] == 1) {
                count++;
            } else { 
                count++;
                k--;
            }

            if (k < 0) {
                if (nums[start] == 0) {
                    k++;
                }
                count--;
                start++; 
            }
        }
        return count;
    }
}


Time complexity:
O(N) since each element is processed at most twice (once by i and once by start).

Space complexity:
O(1) (Constant Space)
